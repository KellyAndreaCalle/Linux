parameters:
- name: stages
  type: stageList
  default: []
- name: resultsPrefix
  type: string
  
stages:
  - stage: 
    displayName: Analysis
    jobs:
    - job: CodeScan
      pool: Default
      steps:
        - script: echo resultsPrefix=${{ parameters.resultsPrefix }}
        - script: $HOME/check database create check-db-$(Build.BuildId) --language=javascript --no-run-unnecessary-builds
          displayName: init db
        - script: $HOME/check database analyze check-db-$(Build.BuildId) --format=sarif-latest --output=${{ parameters.resultsPrefix }}-code-scan-$(Build.BuildId).sarif
          displayName: analyze db
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Build.Repository.LocalPath)/${{ parameters.resultsPrefix }}-code-scan-$(Build.BuildId).sarif'
            artifact: 'CodeScanning'
            publishLocation: 'pipeline'

    - job: SecretScan
      pool: Default
      steps:
        - script: git rev-list --all --objects | awk '{print $1}' | git cat-file --batch --buffer | $HOME/scan -dbdir $HOME/hypercredscan/ -out ${{ parameters.resultsPrefix }}-secret-scan-$(Build.BuildId).json
          displayName: scan
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(Build.Repository.LocalPath)/${{ parameters.resultsPrefix }}-secret-scan-$(Build.BuildId).json'
            artifact: 'SecretScanning'
            publishLocation: 'pipeline'
  - ${{ each stage in parameters.stages }}:
    - ${{ stage }}
