trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        steps:
        - task: UseNode@1
          inputs:
            version: '16.x'
          displayName: 'Install Node.js'
        - script: |
            npm install
            npm run build --if-present
            npm run test --if-present
          displayName: 'npm install, build and test'
        - task: ArchiveFiles@2
          displayName: 'Archive files'
          inputs:
            rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
            includeRootFolder: false
            archiveType: zip
            archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            replaceExistingArchive: true
        - task: PublishPipelineArtifact@1
          displayName: 'Publish artifact'
          inputs:
            targetPath: '$(Build.ArtifactStagingDirectory)'
            artifactName: 'WebApp'
            publishLocation: 'pipeline'

  - stage: Deploy
    displayName: Deploy stage
    jobs:
      - deployment: VMDeploy
        displayName: Web deploy
        environment:
          name: Maquina_Linux
          resourceType: VirtualMachine
          tags: web
        strategy:
          rolling:
            maxParallel: 2
            preDeploy:
              steps:
              - download: current
                artifact: WebApp
              - script: echo initialize, cleanup, backup, apt install certs
            deploy:
              steps:
              - task: Bash@3
                inputs:
                  targetType: 'inline'
                  script: |
                    echo "Starting deployment script run"
                    echo $(SUDO_PASSWORD) | sudo -S java -jar '$(Pipeline.Workspace)/WebApp/**/target/*.jar'
            routeTraffic:
              steps:
              - script: echo routing traffic
            postRouteTraffic:
              steps:
              - script: echo health check post-route traffic
            on:
              failure:
                steps:
                - script: echo Restore from backup! This is on failure
              success:
                steps:
                - script: echo Notify! This is on success
