# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

parameters:
- name: myString
  type: string
  default: a string
- name: myMultiString
  type: string
  default: default
  values:
  - default
  - ubuntu
- name: myNumber
  type: number
  default: 2
  values:
  - 1
  - 2
  - 4
  - 8
  - 16
- name: myBoolean
  type: boolean
  default: true
- name: myObject
  type: object
  default:
    foo: FOO
    bar: BAR
    things:
    - one
    - two
    - three
    nested:
      one: apple
      two: pear
      count: 3
- name: myStep
  type: step
  default:
    script: echo my step
- name: mySteplist
  type: stepList
  default:
    - script: echo step one
    - script: echo step two
    
trigger:
- master

stages:
- stage: build
  displayName: 'build stage'
  jobs:
    - job:
      displayName: 'Build and unit test the app'
      pool: Default
      steps:
      - script: "echo Build.DefinitionName: $(Build.DefinitionName) Build.BuildId: $(Build.BuildId)"
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Install Node.js'

      - script: npm install
        displayName: 'npm install'
      - script: npm run build
        displayName: 'npm build'

      - script: npm install --global gulp-cli
        displayName: 'install gulp'

      - script: gulp
      - task: PublishTestResults@2
        inputs:
          testRunner: JUnit
          testResultsFiles: '**/TEST-RESULTS.xml'
          testRunTitle: 'Test results for JavaScript using gulp'
      - task: PublishCodeCoverageResults@1
        inputs: 
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'
- stage: deploy
  displayName: 'deploy stage'
  jobs:
    - deployment: DeployWebApp
      displayName: 'Deploy web app'
      pool:
        vmImage: 'ubuntu-latest'
      environment: 'Production'
      strategy:
        runOnce:
          deploy:
            steps:
              - script: echo hello, world
