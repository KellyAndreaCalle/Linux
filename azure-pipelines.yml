# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  vmImage: 'vs2017-win2016' # examples of other options: 'macOS-10.15', 'vs2017-win2016'


steps:
- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Install Node.js'
- task: Npm@1
  inputs:
  command: 'install'
- task: Npm@1
  inputs:
    customEndpoint: <Name of npm service connection>
- task: npmAuthenticate@0
  inputs:
    customEndpoint: <Name of npm service connection>
- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testRunner: JUnit
    testResultsFiles: '**/TEST-RESULTS.xml'
- task: PublishCodeCoverageResults@1
  inputs: 
    codeCoverageTool: Cobertura # or JaCoCo
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'
 - task: npmAuthenticate@0
  inputs:
    customEndpoint: <Name of npm service connection>
 - task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/TEST-RESULTS.xml'
    testRunTitle: 'Test results for JavaScript using gulp'
 - task: PublishCodeCoverageResults@1
  inputs: 
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'
 - task: npmAuthenticate@0
  inputs:
    customEndpoint: <Name of npm service connection>

- script: grunt                      # include any additional options that are needed
 
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)'
- script: gulp                       # include any additional options that are needed
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: |
      **\*.js
      package.json
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
 - script: |
    npm install -g @angular/cli
    npm install
    ng build --prod  
- task: Npm@1
  inputs:
     command: publish
     publishRegistry: useExternalRegistry
     publishEndpoint: https://my.npmregistry.com
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false

- script: |
    npm install --only=dev
    npm run build
- script: npm install --only=dev
- script: npx mocha
- script: npm install -g @angular/cli
- script: npm install
- script: yarn install
- script: npm run compile
- script: tsc --target ES6 --strict true --project tsconfigs/production.json
- script: mocha test --reporter mocha-junit-reporter
- script: npm test
- script: |
    npm install
    npm run build
 displayName: 'npm install and build'
- script: webpack
- script: npm run build
- script: |
    npm install webpack webpack-cli --save-dev
    npx webpack --config webpack.config.js
- script: gulp                       # include any additional options that are needed
- script: grunt                      # include any additional options that are needed
- script: npm publish

  displayName: 'npm install and build'
  
  steps:
- bash: |
    NODE_VERSION=12  # or whatever your preferred version is
    npm config delete prefix  # avoid a warning
    . ${NVM_DIR}/nvm.sh
    nvm use ${NODE_VERSION}
    nvm alias default ${NODE_VERSION}
    VERSION_PATH="$(nvm_version_path ${NODE_VERSION})"
    echo "##vso[task.prependPath]$VERSION_PATH"
- bash: |
    . ${NVM_DIR}/nvm.sh
    nvm <command>
